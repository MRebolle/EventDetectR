% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/detectEvents.R
\name{detectEvents}
\alias{detectEvents}
\title{detectEvents in a given data.frame}
\usage{
detectEvents(x, windowSize = 100, nIterationsRefit = 5,
  verbosityLevel = 0, dataPrepators = "ImputeTSInterpolation",
  dataPreparationControl = list(), buildModelAlgo = "ForecastETS",
  buildModelControl = list(), postProcessors = "bedAlgo",
  postProcessorControl = list(), ignoreVarianceWarning = FALSE)
}
\arguments{
\item{x}{data to classify as T/F event}

\item{windowSize}{amount of data points to consider in each prediction model}

\item{nIterationsRefit}{amount of points into the future which will be predicted}

\item{verbosityLevel}{Print output of function progress. 0 -> No output, 1 -> every 100th model building iteration, 2 -> every 10th, 3 -> every iteration}

\item{dataPrepators}{string or vector of strings, which preparators to use, !no list!}

\item{dataPreparationControl}{control list for data preparators}

\item{buildModelAlgo}{string name of modelling algo}

\item{buildModelControl}{control list for modelling algo}

\item{postProcessors}{string name of one or more postprocessors, !no list!}

\item{postProcessorControl}{control list for postprocessors}

\item{ignoreVarianceWarning}{Ignores the continously appearing warning for missing variance in some variable columns given a smaller windowSize}
}
\value{
edsResults, list of results. $classification -> data.frame containing the T/F event classification
}
\description{
detectEvents builds a prediction model on the first 'windowSize' points of the given data x.
The next nIterationRefit data-points are classified as Event or not.
The window is moved iteratively and the next models are fitted.
The first windowSize points will always be classified as no Event and should only contain 'clean' data
}
\examples{
## Run event detection with default settings:
def <- detectEvents(x = stationBData[1:100,-1])

## Only refit the model after every 50th new datapoint,
## have someoutput with verbosityLevel = 2 and ignore
## the variance warning
ed <- detectEvents(stationBData[1000:2000,-1],nIterationsRefit = 50,
                   verbosityLevel = 2,ignoreVarianceWarning = TRUE)

## Switch to another model: Arima
ed2 <- detectEvents(stationBData[1000:2000,-1],nIterationsRefit = 50,
                    verbosityLevel = 2,ignoreVarianceWarning = TRUE,
                    buildModelAlgo = "ForecastArima")
}
